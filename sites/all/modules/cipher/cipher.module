<?php

function cipher_menu(){
  $items['cipher'] = array(
    'title' => 'Cipher',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cipher_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function cipher_form() {
  $form['shift_value'] = array(
    '#title' => 'Shift Value',
    '#type' => 'textfield',
    '#description' => t('Enter shift value'),
    '#element_validate' => array('element_validate_integer_positive'),
  );
  $form['direction'] = array(
    '#title' => 'Direction',
    '#type' => 'textfield',
    '#description' => t('Enter Direction'),
    '#element_validate' => array('element_validate_rightleft'),
  );
  $form['phrase'] = array(
    '#title' => 'Phrase',
    '#type' => 'textfield',
    '#description' => t('Enter phrase to be encrypted'),
    '#element_validate' => array('element_validate_punctuation'),
  );
  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => 'Go',
  );
  return $form;
}


// // form validate null
// function element_validate_null($form, &$form_state){
//   $fieldname = $form_state['values'];
//   if($fieldname == null){
//     form_set_error($element, t('required field!'));
//   }
// }


//form validate left or right
function element_validate_rightleft($element) {
  $allowed = array('right', 'left');
  if (!in_array($element['#value'], $allowed)) {
      form_error($element, t('You must enter "left" or "right".'));
  }
}

// element validate punctuation for only spaces and punctuation
function element_validate_punctuation($element){
  $not_allowed = str_split('<>/_)()=+*&^%$#@~`|');
  if(in_array($element['#value'], $not_allowed)){
    form_error($element, t('please do not enter "special characters" only punctuation and spaces.'));
  }
}

function cipher_form_submit($form, &$form_state){
  $shift_value = $form_state['values']['shift_value'];
  $direction = $form_state['values']['direction'];
  $phrase = $form_state['values']['phrase'];

  $result_array = array();
  $alpha = str_split("abcdefghijklmnopqrstuvwxyz");
  $split_phrase = str_split($phrase);
  if($direction == "left"){
    foreach($split_phrase as $letter){
      $key = array_search($letter, $alpha);
      if(($key - $shift_value) < 0){
        $key += 27 - $shift_value;
      }
      array_push($result_array, $alpha[$key - $shift_value]);
    }
  }
  if($direction == "right"){
    foreach($split_phrase as $letter){
      $key = array_search($letter, $alpha);
      if(($key + $shift_value) > 25){
        $key -= 25 + $shift_value;
      }
      array_push($result_array, $alpha[$key + $shift_value]);
    }
  }
  drupal_set_message(implode("", $result_array));
}
